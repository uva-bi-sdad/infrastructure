version: '3'

# Notes about this docker-compose file
# the R packages are installed within the rpkgs container
# it uses the 'global' `rpkgs` volumne
# The R packages are not installed by default (i.e., in the Dockerfile)
# if you completely tear and remove all containers/volumnes/etc
# remember to exec into the `rpkgs` container and manually install packages
# there are code examples and links to the scripts in the rpkgs Dockerfile

volumes:
  pg_data:
  nginx:
  nginx-certs:
  pgdata:
  sftp:
  gitlab_config:
  gitlab_logs:
  gitlab_data:
  gitlab_pg_data:
  dpl7_modules:
  dpl7_profiles:
  dpl7_sites:
  dpl7_themes:
  shy_apps:

services:

  db:
    image: kartoza/postgis:9.6-2.4
    container_name: postgis
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: gisuser
      POSTGRES_DBNAME: gis
      POSTGRES_PASSWORD: maps
      ALLOW_IP_RANGE: 0.0.0.0/0
    ports:
      - 5433:5432

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    links:
      - db
    ports:
      - 8080:8080

  nginx:
    image: nginx
    container_name: nginx
    volumes:
     - nginx:/etc/nginx
     - nginx-certs:/etc/nginx/certs:ro
    ports:
     - "80:80"
     - "443:443"
    restart: unless-stopped

  gitlab:
    container_name: gitlab
    image: 'gitlab/gitlab-ce:9.1.0-ce.0'
    restart: always
    hostname: 'sdad.policy-analytics.net'
    links:
      - gitlab_pg:gitlab_pg
      - redis:redis
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        postgresql['enable'] = false
        gitlab_rails['db_username'] = "gitlab"
        gitlab_rails['db_password'] = "gitlab"
        gitlab_rails['db_host'] = "gitlab_pg"
        gitlab_rails['db_port'] = "5432"
        gitlab_rails['db_database'] = "gitlabhq_production"
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_encoding'] = 'utf8'
        redis['enable'] = false
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_port'] = '6379'
        external_url 'http://sdad.policy-analytics.net:30080'
        gitlab_rails['gitlab_shell_ssh_port'] = 30022
    ports:
      # both ports must match the port from external_url above
      - "30080:30080"
      # the mapped port must match ssh_port specified above.
      - "30022:22"
  # the following are hints on what volumes to mount if you want to persist data
    volumes:
      - gitlab_config:/etc/gitlab:rw
      - gitlab_logs:/var/log/gitlab:rw
      - gitlab_data:/var/opt/gitlab:rw
  
  gitlab_pg:
    container_name: gitlab_pg
    restart: always
    image: postgres:9.6.2-alpine
    environment:
      - POSTGRES_USER=gitlab
      - POSTGRES_PASSWORD=gitlab
      - POSTGRES_DB=gitlabhq_production
  # the following are hints on what volumes to mount if you want to persist data
    volumes:
      - gitlab_pg_data:/var/lib/postgresql:rw
  
  redis:
    container_name: redis
    restart: always
    image: redis:3.0.7-alpine

  drupal7:
    image: sdal/dpl7
    container_name: drupal7
    volumes:
      - dpl7_modules:/var/www/html/modules:rw
      - dpl7_profiles:/var/www/html/profiles:rw
      - dpl7_themes:/var/www/html/themes:rw
      - dpl7_sites:/var/www/html/sites:rw
      #- certs:/etc/letsencrypt
    ports:
      - 8383:80
  
  sharelatex:
    restart: always
    image: sharelatex/sharelatex
    container_name: sharelatex
    depends_on:
        - mongo
        - redis
    privileged: true
    ports:
        - 3000:80
    links:
        - mongo
        - redis
    volumes:
        - ~/sharelatex_data:/var/lib/sharelatex
        - /var/run/docker.sock:/var/run/docker.sock
        #- /var/clsi/compiles:/var/www/sharelatex/clsi/compiles
    environment:
        SHARELATEX_MONGO_URL: mongodb://mongo/sharelatex
        SHARELATEX_REDIS_HOST: redis
        SHARELATEX_APP_NAME: Our ShareLaTeX
        
        ## Set for SSL via nginx-proxy
        #VIRTUAL_HOST: 103.112.212.22

        # SHARELATEX_SITE_URL: http://sharelatex.mydomain.com
        # SHARELATEX_NAV_TITLE: Our ShareLaTeX Instance
        # SHARELATEX_HEADER_IMAGE_URL: http://somewhere.com/mylogo.png
        # SHARELATEX_ADMIN_EMAIL: support@it.com

        # SHARELATEX_LEFT_FOOTER: '[{"text": "Powered by <a href=\"https://www.sharelatex.com\">ShareLaTeX</a> 2016"},{"text": "Another page I want to link to can be found <a href=\"here\">here</a>"} ]'
        # SHARELATEX_RIGHT_FOOTER: '[{"text": "Hello I am on the Right"} ]'

        # SHARELATEX_EMAIL_FROM_ADDRESS: "team@sharelatex.com"

        # SHARELATEX_EMAIL_AWS_SES_ACCESS_KEY_ID: 
        # SHARELATEX_EMAIL_AWS_SES_SECRET_KEY: 

        # SHARELATEX_EMAIL_SMTP_HOST: smtp.mydomain.com
        # SHARELATEX_EMAIL_SMTP_PORT: 587
        # SHARELATEX_EMAIL_SMTP_SECURE: false
        # SHARELATEX_EMAIL_SMTP_USER: 
        # SHARELATEX_EMAIL_SMTP_PASS: 
        # SHARELATEX_EMAIL_SMTP_TLS_REJECT_UNAUTH: true
        # SHARELATEX_EMAIL_SMTP_IGNORE_TLS: false
        # SHARELATEX_CUSTOM_EMAIL_FOOTER: "<div>This system is run by department x </div>"

        ################
        ## Server Pro ##
        ################

        # SANDBOXED_COMPILES: 'true'
        
        # SANDBOXED_COMPILES_SIBLING_CONTAINERS: 'true'
        # SANDBOXED_COMPILES_HOST_DIR: '/var/clsi/compiles'

        ## Works with test LDAP server shown at bottom of docker compose
        # SHARELATEX_LDAP_URL: 'ldap://ldap:389'
        # SHARELATEX_LDAP_SEARCH_BASE: 'ou=people,dc=planetexpress,dc=com'
        # SHARELATEX_LDAP_SEARCH_FILTER: '(uid={{username}})'
        # SHARELATEX_LDAP_BIND_DN: 'cn=admin,dc=planetexpress,dc=com'
        # SHARELATEX_LDAP_BIND_CREDENTIALS: 'GoodNewsEveryone'
        # SHARELATEX_LDAP_EMAIL_ATT: 'mail'
        # SHARELATEX_LDAP_NAME_ATT: 'cn'
        # SHARELATEX_LDAP_LAST_NAME_ATT: 'sn'
        # SHARELATEX_LDAP_UPDATE_USER_DETAILS_ON_LOGIN: 'true'

        # SHARELATEX_TEMPLATES_USER_ID: "578773160210479700917ee5"

        # SHARELATEX_PROXY_LEARN: "true"

  mongo:
    restart: always
    image: mongo
    container_name: mongo
    expose:
        - 27017
    volumes:
        - ~/mongo_data:/data/db
